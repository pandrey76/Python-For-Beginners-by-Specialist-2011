#!/usr/bin/env python
# -*- coding: utf-8 -*-

import os
import os.path
import codecs


CDC = codecs.lookup( u"windows-1251")
#Эта функция находит в библиотеке Python указанный кодек
#создаёт этот объект и отдаёт его нам с этого момента мы можем пользоваться
#кодировкой в ту и  вдругую сторону ( unicode -> cp-1251 и cp-1251 -> unicode )
#Внимание, перекодировка строк используется исключительно для операций ввода-вывода!!!!,
#или при взаимодействии с библиотекой которая явно требует строки определённой кодировки.
#Например набор модулей dbi ввод/вывод базы данных в Python (dbi) перекодировать не надо,
#Другими словами пользоваться функциями перекодирования строк, только там где это действительно надо!!!!
Cdrive = u"c:\\"
for ( path, dirs, files ) in os.walk( Cdrive ) :
    for File in files :
        P = os.path.join ( path, File )
        
#        print os.path.relpath ( P, Cdrive )
#При попытке передать ввод в файл "python.exe codec.py > out.txt" интерпретатор сгенерирует ошибку
#"UnicodeEncodeError", когда будет пытаться вывести русские символы, т.к. при записи в файл Python 
#пытается перекодировать в ASCII.

########################################################################
#Примечание: Для перевода потока ошибок (stderr) в файл делается так
#"c:\Python27\python.exe codec.py > out.txt 2> error.txt" 2 - номер потока ошибок.
#raise ImportError
########################################################################

#Кодируем в кодировку windows-1251
        print CDC.encode ( os.path.relpath ( P, Cdrive ) )
#результат функция encode выдаёт картеж из двух элементов
        #первый элемент - закодированная строка
        #второй элемент - число символов в этой строке
        #правильная запись
        ( Str, N ) = CDC.encode ( os.path.relpath ( P, Cdrive ) )
        print Str
        